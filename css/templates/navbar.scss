@use "../data/variables.scss";

nav {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;

  position: sticky;
  top: 0;

  width: 100%;
  background-color: #111;

  padding: 0;

  z-index: var(--navbar-overlay);

  border-bottom: var(--nav-border-size) solid var(--red);
  height: var(--nav-height);
  transition: all var(--speed) var(--bezier-primary);
  /* I swear 90% of the CSS undefined behavior is fixed with this property */
  box-sizing: border-box;
}
.nav-container {
  display: flex;
  justify-content: center;
  width: 100vw;
}

/* Underline effect */
.nav-item,
.nav-section {
  display: inline-block;
  padding: 15px;
  width: 22vw;
}
.nav-item::after {
  content: "";
  width: 100%;
  opacity: 0%;
  height: 1px;
  translate: -50% 0;
  margin-left: 50%;
  display: block;
  background: var(--red);
  transition: var(--speed);
}
.nav-item:hover::after {
  opacity: 100%;
}
/* Nav section styling */
summary,
.section-nav-items a,
.mobile-section-nav-items a {
  color: var(--red);
  transition: var(--quick-speed) var(--bezier-primary);
}
summary:hover,
.section-nav-items a:hover {
  color: var(--dark-red);
}
.mobile-section-nav-items a:hover {
  color: var(--red);
}
/* Actually that marker is pretty cool to be honest */
/*
summary::marker {
  content: "";
}
*/
.section-nav-items,
.mobile-section-nav-items {
  display: grid;
}
.section-nav-items {
  background-color: var(--black);
  position: relative;
  inset: 50%;
  translate: -50% -50%;
  font-size: 0.8em;
  border: var(--nav-border-size) solid var(--red);
  border-top: none;
}
.section-nav-items a,
.mobile-section-nav-items a {
  color: var(--light-red);
}
.section-nav-items a {
  padding: 10px 0;
}
.mobile-section-nav-items a {
  padding: 20px 0;
}

/**
 * Mobile styling
 * Used state handling to change class names
 */
.mobile-nav-button {
  display: none;
  text-decoration: none;
  position: absolute;
  left: 0;
  bottom: 0;
}
.opened-mobile-nav-button {
  position: absolute;
  top: var(--bottom-nav-offset);
  font-size: var(--nav-button-size);
  background: var(--black);
  width: 100vw;
  z-index: var(--navbar-overlay);
  padding-bottom: calc(100% - var(--nav-button-size));
}
.opened-nav-container {
  position: fixed;
  translate: 0% -33%;
  display: block;
  overflow: scroll;
  max-height: 50vh;
}
.opened-nav-item {
  display: block;
}
.opened-nav {
  height: 100vh;
  position: fixed;
  width: 100vw;
}

/* Media rules for proper responsiveness */
@media screen and (max-width: 800px) {
  nav {
    flex-direction: column-reverse;
  }
  .mobile-nav-item,
  .mobile-nav-button {
    width: 100vw;
  }
  .mobile-nav-button {
    display: block;
    font-size: var(--nav-button-size);
  }
  .mobile-nav-item {
    margin: 60px 0;
  }
  .nav-container {
    flex-wrap: wrap;
  }
  .nav-item,
  .nav-section {
    display: none;
  }
}
